{"data":{"links":{"self":{"href":"https:\/\/app.pollinatorhub.eu\/api\/v1\/discovery\/datasets\/BGDHL178.0.0"}},"id":178,"uid":"BGDHL178.0.0","name":"B-GOOD Health Monitoring","long_name":"Dataset from the B-GOOD project, containing data from studies on diseases detected in honey bee colonies.","description":"The dataset contains results from the analysis of the [pathogens](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/97) [Deformed Wing  Virus A](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7418) (DWV-A), [Deformed Wing Virus B](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7419) (DWV-B); [Acute Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/99) (ABPV), [Chronic Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/100) (CBPV), [Black Queen Cell Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/103) (BQCV), [Sackbrood Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/105) (SBV), [Paenibacillus larvae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/89);  [Melissococcus plutonius](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/90); [Nosema apis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/92); [Nosema ceranae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/93); [Malpighamoeba mellificae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/96); [Varroa destructor](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/80) in [honey bee](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/19) samples collected in spring, summer and autumn of 2020, 2021 and 2022 in different locations. It was published by Sch\u00e4fer MO (FLI) on the [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org) as part of the [B-GOOD project (grant agreement 817622)](https:\/\/b-good-project.eu\/), funded under the [EU Horizon 2020 Research and Innovation Programme](https:\/\/research-and-innovation.ec.europa.eu\/funding\/funding-opportunities\/funding-programmes-and-open-calls\/horizon-2020_en). ","featured_image":null,"data_overview":"The data was published by Sch\u00e4fer MO (FLI) on the [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org) as part of the [B-GOOD project (grant agreement 817622)](https:\/\/b-good-project.eu\/), funded under the [EU Horizon 2020 Research and Innovation Programme](https:\/\/research-and-innovation.ec.europa.eu\/funding\/funding-opportunities\/funding-programmes-and-open-calls\/horizon-2020_en). It contains results from the analysis of pathogens (Deformed Wing Virus A, DWV A; Deformed Wing Virus B, DWV B; Acute Bee Paralysis Virus, ABPV; Chronic Bee Paralysis Virus CBPV; Black Queen Cell Virus BQCV; Sackbrood Virus, SBV; *Paenibacillus larvae*; *Melissococcus plutonius*; *Nosema apis*; *Nosema ceranae*; *Malpighamoeba mellificae*; *Varroa destructor*) in bee samples collected in spring, summer and autumn of 2020, 2021 and 2022 in different locations.","data_value":"The objectives of the B-GOOD project were: (1) Facilitate decision making for beekeepers and other stakeholders by establishing ready-to-use tools for operationalising the HSI; (2) Test, standardise and validate methods for measuring and reporting selected indicators affecting bee health; (3) Explore the various socio-economic and ecological factors beyond bee health; (4) Foster an EU community to collect and share knowledge related to honey bees and their environment; (5) Engender a lasting learning and innovation system (LIS); (6) Minimise the impact of biotic and abiotic stressors.","data_description":"The datset contains two tables. One contains the results from the pilot studies (1029 records, 333,43 kB), one the results from the field studies (769 records, 233,42 kB).","data_application":"Currently, the data integrated from the [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/) contains major issues and does not comply with the [FAIR Guiding Principles for scientific data management and stewardship](https:\/\/www.go-fair.org\/fair-principles\/) applied on the EU Pollinator Hub. More descriptive information about the context, quality and condition, or characteristics of the data (*e.g.* protocols, measurement devices used, units of the captured data, or any other details about the study) must be provided. More metadata in the form of accurate and relevant attributes (*e.g. *metadata that describes the scope of the data has been described, any particularities or limitations about the data that other users should be aware of, specification of the date of generation\/collection of the data, the lab conditions, who prepared the data, the parameter settings, the name and version of the software used, specification of whether it is raw or processed data, explanation of all variable names are explained if they are not self-explanatory) must be provided. It requires major revisions by the data provider.","data_issues":null,"introduction":"The data was published by Sch\u00e4fer MO (FLI) on the [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org) as part of the [B-GOOD project (grant agreement 817622)](https:\/\/b-good-project.eu\/), funded under the [EU Horizon 2020 Research and Innovation Programme](https:\/\/research-and-innovation.ec.europa.eu\/funding\/funding-opportunities\/funding-programmes-and-open-calls\/horizon-2020_en). The dataset contains results from the analysis of pathogens (Deformed Wing Virus A, DWV A; Deformed Wing Virus B, DWV B; Acute Bee Paralysis Virus, ABPV; Chronic Bee Paralysis Virus CBPV; Black Queen Cell Virus BQCV; Sackbrood Virus, SBV; *Paenibacillus larvae*; *Melissococcus plutonius*; *Nosema apis*; *Nosema ceranae*; *Malpighamoeba mellificae*; *Varroa destructor*) in bee samples collected in spring, summer and autumn of 2020, 2021 and 2022 in different locations.\n\nThe objectives of the B-GOOD project were: (1) Facilitate decision making for beekeepers and other stakeholders by establishing ready-to-use tools for operationalising the HSI; (2) Test, standardise and validate methods for measuring and reporting selected indicators affecting bee health; (3) Explore the various socio-economic and ecological factors beyond bee health; (4) Foster an EU community to collect and share knowledge related to honey bees and their environment; (5) Engender a lasting learning and innovation system (LIS); (6) Minimise the impact of biotic and abiotic stressors.\n","acquisition":"All raw data files were downloaded from the [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org) on 2024-07-04. \n\n**List of raw data and metadata files obtained from the data provider.**\n\n1. File *b-good-pilot-a-results-2020-for-beep-v2.xlsx* accesed on 2024-10-01 14:19:29, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/fcc548b1-cb3d-44cf-8e39-e7fc0eadcb35)\n2. File *b-good-pilot-a-results-2020-for-inrae-v2.xlsx* accessed on 2024-10-01 14:21:11, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/bc6f222c-44f6-4c25-ae04-068fcdd7079a) \n3. File *b-good-pilot-a-results-2020-for-mlu-v2.xlsx* accessed on 2024-10-01 14:21:31, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/679ad881-b929-452c-bd02-0cf77e3a40b5) \n4. File *b-good-pilot-a-results-2020-for-tntu-v2.xlsx* accessed on 2024-10-01 14:22:01, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/54f5eb3e-0274-4a4e-9850-afbda208334c) \n5. File *b-good-pilot-a-results-2020-for-ubern-v2.xlsx* accessed on 2024-10-01 14:26:57, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/b63ff0d5-ccae-4d44-96d9-eeb00ebaf730)\n6. File *b-good-pilot-a-results-2020-for-ucluj-v2.xlsx* accessed on 2024-10-01 14:27:11, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/5a066daf-3f56-462c-a3e4-096174310f44)\n7. File *b-good-pilot-a-results-2020-for-ucoi-v2.xlsx* accessed on 2024-10-01 14:27:55, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/b538071f-de36-4775-9a32-5ab0f0bc97e2)\n8. File *b-good-pilot-a-results-2020-for-ugent-v2.xlsx* accessed on 2024-10-01 14:28:07, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/5389e70d-505b-405b-b85e-8dee358c6e73)\n9. File *b-good-pilot-a-results-2020-for-wr-v2.xlsx* accessed on 2024-10-01 14:28:19, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/14445796-21f8-4952-955e-90483ac250ea)\n11. File *b-good-pilot-b-results-2020-for-wr-v3.xlsx* accessed on 2024-10-01 14:28:33, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/5f2a5902-82ba-4e2d-9e81-fdb6a3785ec1)\n12. File *b-good-tier-1-results-2021-for-beep-v3.xlsx* accessed on 2024-10-01 17:47:21, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/17778257-4340-4e96-8106-beaa365602dc)\n13. File *b-good-tier-1-results-2021-for-inrae-v2.xlsx* accessed on 2024-10-01 17:47:36, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/7052afef-8ecb-40fd-8a5a-4518aa5abf5d)\n14. File *b-good-tier-1-results-2021-for-mlu-v2.xlsx* accessed on 2024-10-01 17:47:50, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/2886662c-6f1b-4e66-ba8c-47a7ab118114)\n15. File *b-good-tier-1-results-2021-for-tntu-v2.xlsx* accessed on 2024-10-01 17:48:04, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/58935b33-4779-4db2-aa8a-e3bf6ff67f9b)\n16. File *b-good-tier-1-results-2021-for-ubern-v2.xlsx* accessed on 2024-10-01 17:48:22, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/b0bdca17-5370-45ad-8ff1-ef2b4fc44ff2)\n17. File *b-good-tier-1-results-2021-for-ucluj-v2.xlsx* accessed on 2024-10-01 17:48:34, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/093df3a8-ebb1-4c15-af36-90e4d8df8152)\n18. File *b-good-tier-1-results-2021-for-ucoi-v3.xlsx* accessed on 2024-10-01 17:48:51, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/62964ba3-a343-497b-a83f-282fa453b9a7)\n19. File *b-good-tier-1-results-2021-for-ugent-v2.xlsx* accessed on 2024-10-01 17:49:05, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/33e73d3f-76a9-45ca-847f-f56e3a8dbb43)\n20. File *b-good-tier1-results-2021-for-wr-v2.xlsx* accessed on 2024-10-01 17:49:18, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/1732069f-3c35-4536-8ff3-4dcb65a8864a)\n21. File *b-good-pilot-b-results-2021-for-wr-v2.xlsx* accessed on 2024-10-01 17:49:36, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/76f5fe0e-e137-4263-bdc8-1cb2d4c6aa66)\n22. File *b-good-tier-1-results-2022-for-beep.xlsx* accessed on 2024-10-01 18:16:24, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/0dbc5c1e-fd34-4399-b4e3-a5741b52422c)\n23. File *b-good-tier-1-results-2022-for-inrae.xlsx* accessed on 2024-10-01 18:16:44, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/3df0a84a-c894-45ac-baf0-711f0a4e675c)\n24. File *b-good-tier-1-results-2022-for-mlu.xlsx* accessed on 2024-10-01 18:16:57, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/f7564e97-697c-4823-9459-3f9c04f322d4)\n25. File *b-good-tier-1-results-2022-for-tntu.xlsx* accessed on 2024-10-01 18:17:10, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/db513025-5651-454c-979a-1b29da25054c)\n26. File *b-good-tier-1-results-2022-for-ubern.xlsx* accessed on 2024-10-01 18:17:22, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/1d9663ae-bede-475e-a376-317320222f29)\n27. File *b-good-tier-1-results-2022-for-ucluj.xlsx* accessed on 2024-10-01 18:17:34, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/dfa31c9f-ee5a-46eb-878d-1a1cc5d55a1d)\n28. File *b-good-tier-1-results-2022-for-ucoi.xlsx* accessed on 2024-10-01 18:17:46, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/07725877-79d9-41cd-bd22-2eb701c9a664)\n29. File *b-good-tier-1-results-2022-for-ugent.xlsx* accessed on 2024-10-01 18:18:09, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/e87f06cd-5541-4513-9fa7-9b11b9a570ae)\n30. File *b-good-pilot-a-results-2022-for-wr.xlsx* accessed on 2024-10-01 18:18:24, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/ea56fecb-d43a-4cd2-bff1-8d331b124bd2)\n31. File *b-good-pilot-b-results-2022-for-wr.xlsx* accessed on 2024-10-01 18:18:41, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/e1aea4e6-2f1b-4585-b31f-36598db40b93)\n32. File *b-good-tier-2-results-2021-for-beep-v3.xlsx* accessed on 2024-10-01 18:27:41, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/8133604e-4622-4806-995b-023cd23e53db)\n33. File *b-good-tier-2-results-2021-for-bsour-v2.xlsx* accessed on 2024-10-01 18:27:55, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/2dc7fe43-4cab-4676-a3c7-3e078d8065f1)\n34. File *b-good-tier-2-results-2021-for-mlu-v2.xlsx* accessed on 2024-10-01 18:28:08, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/9348f203-bfba-4a54-bbc6-84973c307399)\n35. File *b-good-tier-2-results-2021-for-sml-v2.xlsx* accessed on 2024-10-01 18:28:22, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/d1475865-2ed1-421d-8963-e9e0b0b1b405)\n36. File *b-good-tier-2-results-2021-for-ubern-v3.xlsx* accessed on 2024-10-01 18:28:34, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/eb296ac9-80a2-404c-9d93-bc805af8d370)\n37. File *b-good-tier-2-results-2021-for-wr-v2.xlsx* accessed on 2024-10-01 18:28:47, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/f4a703c0-f792-4bab-97f5-e354c45c10c6)\n38. File *b-good-tier-2-results-2022-for-beep-v2.xlsx* accessed on 2024-10-01 18:22:14, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/1b40261f-0fa0-4a7f-8061-be27cb2be3f6)\n39. File *b-good-tier-2-results-2022-for-bsour.xlsx* accessed on 2024-10-01 18:22:35, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/2c542438-91bb-4e85-b32e-72b0ef8554d0)\n40. File *b-good-tier-2-results-2022-for-mlu.xlsx* accessed on 2024-10-01 18:22:47, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/9cf8a710-0f7a-44b4-b737-b627a0d8c738)\n41. File *b-good-tier-2-results-2022-for-sml-v2.xlsx* accessed on 2024-10-01 18:23:00, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/27c64749-c0d6-4969-a938-34f05f126eda)\n42. File *b-good-tier-2-results-2022-for-ubern.xlsx* accessed on 2024-10-01 18:23:15, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/51e909e5-1cc2-40a3-9edb-3c3770aea928)\n43. File *b-good-tier-2-results-2022-for-wr.xlsx* accessed on 2024-10-01 18:23:29, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/a25f50d0-91a6-4531-bbf2-be7633e71e81)\n44. File *b-good-tier-3-results-2022-for-beep.xlsx* accessed on 2024-10-01 18:24:20, provided by Sch\u00e4fer, MO (FLI) at [B-GOOD Bee Health Data Portal](https:\/\/beehealthdata.org\/datasets\/8ea4d968-b1ae-4253-9856-f913b374217b\/)\n\nMetadata was obtained from the web pages of the single datasets (see above).","preparation":"All files in the zip-archives were extracted using File Explorer (Microsoft Corporation, version 22H2). The data files were processed using MS Excel (Microsoft Corporation, version 2409).\n\nFor datasets [B-GOOD Pilot A results 2020 for MLU V2](https:\/\/beehealthdata.org\/datasets\/679ad881-b929-452c-bd02-0cf77e3a40b5), [B-GOOD Pilot A results 2020 for TNTU V2](https:\/\/beehealthdata.org\/datasets\/54f5eb3e-0274-4a4e-9850-afbda208334c), [B-GOOD Pilot A results 2020 for UBERN V2](https:\/\/beehealthdata.org\/datasets\/b63ff0d5-ccae-4d44-96d9-eeb00ebaf730), [B-GOOD Pilot A results 2020 for UCLUJ V2](https:\/\/beehealthdata.org\/datasets\/5a066daf-3f56-462c-a3e4-096174310f44), and [B-GOOD Pilot B results 2020 for WR V3](https:\/\/beehealthdata.org\/datasets\/5f2a5902-82ba-4e2d-9e81-fdb6a3785ec1), two apparently identical raw data files (same name, size) were provided on the B-GOOD Bee Health Data Portal. These files were compared using the Get-FileHash command of the Microsoft.PowerShell.Utility module, which computes the hash value for each raw data file by using the SHA256 hash algorithm. Hash values were then compared with MS Excel using the EXACT function. All hash values were the same for each of the duplicate raw data files, therefore, one duplicate file per dataset was deleted.\n\n**Tier 1 Pilot A and B 2020**. Even though this is not explicitly stated in the data description, the file of dataset [B-GOOD Pilot A results 2020 for BEEP V2](https:\/\/beehealthdata.org\/datasets\/fcc548b1-cb3d-44cf-8e39-e7fc0eadcb35) (b-good-pilot-a-results-2020-for-beep-v2.xlsx) contains the data (180 records) form the following datasets, which were therefore not integrated in order to avoid duplicate records: [B-GOOD Pilot A results 2020 for INRAe V2](https:\/\/beehealthdata.org\/datasets\/bc6f222c-44f6-4c25-ae04-068fcdd7079a); [B-GOOD Pilot A results 2020 for MLU V2](https:\/\/beehealthdata.org\/datasets\/679ad881-b929-452c-bd02-0cf77e3a40b5); [B-GOOD Pilot A results 2020 for TNTU V2](https:\/\/beehealthdata.org\/datasets\/54f5eb3e-0274-4a4e-9850-afbda208334c); [B-GOOD Pilot A results 2020 for UBERN V2](https:\/\/beehealthdata.org\/datasets\/b63ff0d5-ccae-4d44-96d9-eeb00ebaf730); [B-GOOD Pilot A results 2020 for UCLUJ V2](https:\/\/beehealthdata.org\/datasets\/5a066daf-3f56-462c-a3e4-096174310f44); [B-GOOD Pilot A results 2020 for UCOI V2](https:\/\/beehealthdata.org\/datasets\/b538071f-de36-4775-9a32-5ab0f0bc97e2); [B-GOOD Pilot A results 2020 for UGENT V2](https:\/\/beehealthdata.org\/datasets\/5389e70d-505b-405b-b85e-8dee358c6e73); [B-GOOD Pilot A results 2020 for WR V2](https:\/\/beehealthdata.org\/datasets\/14445796-21f8-4952-955e-90483ac250ea).\n\n*The following issues were found and resolved:*\n\n*   In column *N. spores*\n    *   file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* contains {\\<25000} while file *b-good-pilot-a-results-2020-for-ucluj-v2.xlsx* contains {0} for *Sample ID* {AHJTRZLZ}. {\\< 25000} has been used, as *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n    *   file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* contains {\\<25000} while file *b-good-pilot-a-results-2020-for-inrae-v2.xlsx* contains {0} for *Sample ID* {MUDAXHCG}. {\\< 25000} has been used, as *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n    *   file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* contains {\\<25000} while file *b-good-pilot-a-results-2020-for-inrae-v2.xlsx* contains {0} for *Sample ID* {RRMUZUBR}. {\\< 25000} has been used, as *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n    *   file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* contains {\\<25000} while file *b-good-pilot-a-results-2020-for-inrae-v2.xlsx* contains {0} for *Sample ID* {SKLRARCR}. {\\< 25000} has been used, as *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n    *   file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* contains {\\<25000} while file *b-good-pilot-a-results-2020-for-inrae-v2.xlsx* contains {0} for *Sample ID* {XLFGKPJZ}. {\\< 25000} has been used, as *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n \n**Tier 1 Pilot A and B 2021**. Even though this is not explicitly stated in the data description, the file of dataset [Tier1 Pilot A results 2021 for BEEP](https:\/\/beehealthdata.org\/datasets\/17778257-4340-4e96-8106-beaa365602dc) (b-good-tier-1-results-2021-for-beep-v3.xlsx) contains the data (186 records) form the following datasets, which were therefore not integrated in order to avoid duplicate records: [Tier1 Pilot A results 2021 for INRAe](https:\/\/beehealthdata.org\/datasets\/7052afef-8ecb-40fd-8a5a-4518aa5abf5d); [Tier1 Pilot A results 2021 for MLU](https:\/\/beehealthdata.org\/datasets\/2886662c-6f1b-4e66-ba8c-47a7ab118114); [Tier1 Pilot A results 2021 for TNTU](https:\/\/beehealthdata.org\/datasets\/58935b33-4779-4db2-aa8a-e3bf6ff67f9b); [Tier1 Pilot A results 2021 for UBERN](https:\/\/beehealthdata.org\/datasets\/b0bdca17-5370-45ad-8ff1-ef2b4fc44ff2); [Tier1 Pilot A results 2021 for UCLUJ](https:\/\/beehealthdata.org\/datasets\/093df3a8-ebb1-4c15-af36-90e4d8df8152); [Tier1 Pilot A results 2021 for UCOI](https:\/\/beehealthdata.org\/datasets\/62964ba3-a343-497b-a83f-282fa453b9a7); [Tier1 Pilot A results 2021 for UGENT](https:\/\/beehealthdata.org\/datasets\/33e73d3f-76a9-45ca-847f-f56e3a8dbb43); [Tier1 Pilot A results 2021 for WR](https:\/\/beehealthdata.org\/datasets\/1732069f-3c35-4536-8ff3-4dcb65a8864a).\n\n**Tier 1 Pilot A and B 2022**. Even though this is not explicitly stated in the data description, the file of dataset [Tier1 Pilot A results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/0dbc5c1e-fd34-4399-b4e3-a5741b52422c) (b-good-tier-1-results-2022-for-beep.xlsx) contains the data 186 records) form the following datasets, which were therefore not integrated in order to avoid duplicate records: [Tier1 Pilot A results 2022 for INRAe](https:\/\/beehealthdata.org\/datasets\/3df0a84a-c894-45ac-baf0-711f0a4e675c); [Tier1 Pilot A results 2022 for MLU](https:\/\/beehealthdata.org\/datasets\/f7564e97-697c-4823-9459-3f9c04f322d4); [Tier1 Pilot A results 2022 for TNTU](https:\/\/beehealthdata.org\/datasets\/db513025-5651-454c-979a-1b29da25054c); [Tier1 Pilot A results 2022 for UBERN](https:\/\/beehealthdata.org\/datasets\/1d9663ae-bede-475e-a376-317320222f29); [Tier1 Pilot A results 2022 for UCLUJ](https:\/\/beehealthdata.org\/datasets\/dfa31c9f-ee5a-46eb-878d-1a1cc5d55a1d); [Tier1 Pilot A results 2022 for UCOI](https:\/\/beehealthdata.org\/datasets\/07725877-79d9-41cd-bd22-2eb701c9a664); [Tier 1 Pilot A results 2022 for UGENT](https:\/\/beehealthdata.org\/datasets\/e87f06cd-5541-4513-9fa7-9b11b9a570ae); [Tier1 Pilot A results 2022 for WR](https:\/\/beehealthdata.org\/datasets\/ea56fecb-d43a-4cd2-bff1-8d331b124bd2).\n\n*The following issues were found and resolved:*\n\n*   Records with *sample ID* {XMMDKSCT; RGYMGYTM; GFGTGBKY} contained in file *b-good-tier-1-results-2022-for-ucluj.xlsx* (3 records), but not in file *b-good-tier-1-results-2022-for-beep.xlsx* were not integrated into the dataset, as file *b-good-pilot-a-results-2020-for-beep-v2.xlsx* is assumed to be the single source of truth.\n\n**Tier 2 Field study 2021**. Even though this is not explicitly stated in the data description, the file of dataset [Tier2 Field study results 2021 for BEEP](https:\/\/beehealthdata.org\/datasets\/8133604e-4622-4806-995b-023cd23e53db) (b-good-tier-2-results-2021-for-beep-v3.xlsx) contains the data (311 records) form the following datasets, which were therefore not integrated in order to avoid duplicate records: [Tier2 Field study results 2021 for BSOUR](https:\/\/beehealthdata.org\/datasets\/2dc7fe43-4cab-4676-a3c7-3e078d8065f1); [Tier2 Field study results 2021 for MLU](https:\/\/beehealthdata.org\/datasets\/9348f203-bfba-4a54-bbc6-84973c307399); [Tier2 Field study results 2021 for SML](https:\/\/beehealthdata.org\/datasets\/d1475865-2ed1-421d-8963-e9e0b0b1b405); [Tier2 Field study results 2021 for UBERN](https:\/\/beehealthdata.org\/datasets\/eb296ac9-80a2-404c-9d93-bc805af8d370); [Tier2 Field study results 2021 for WR](https:\/\/beehealthdata.org\/datasets\/f4a703c0-f792-4bab-97f5-e354c45c10c6).\n \n**Tier 2 Field study A 2022**. Even though this is not explicitly stated in the data description, the file of dataset [Tier2 Field study A results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/1b40261f-0fa0-4a7f-8061-be27cb2be3f6) (b-good-tier-2-results-2022-for-beep-v2.xlsx) contains the data (300 records) form the following datasets, which were therefore not integrated in order to avoid duplicate records: [Tier2 Field study A results 2022 for BSOUR](https:\/\/beehealthdata.org\/datasets\/2c542438-91bb-4e85-b32e-72b0ef8554d0); [Tier2 Field study A results 2022 for MLU](https:\/\/beehealthdata.org\/datasets\/9cf8a710-0f7a-44b4-b737-b627a0d8c738); [Tier 2 Field study A results 2022 for SML](https:\/\/beehealthdata.org\/datasets\/27c64749-c0d6-4969-a938-34f05f126eda); [Tier 2 Field study A results 2022 for UBERN](https:\/\/beehealthdata.org\/datasets\/51e909e5-1cc2-40a3-9edb-3c3770aea928); [Tier 2 Field study A results 2022 for WR](https:\/\/beehealthdata.org\/datasets\/a25f50d0-91a6-4531-bbf2-be7633e71e81).\n\nData from all pilot studies and data from all field studies was transferred into one single table (*pilot studies*, *field studies*) in order to facilitate automated evaluation and visualisation of the data. Six columns were added to the beginning and one column to the end (*RecordNotes*) of each table, which contained the following metadata, as provided in the metadata section of each dataset on the B-GOOD Bee Health Data Portal:\n*   name of the dataset (column *dataset*)\n*   tier level of the study (column *StudyTierLevel*)\n*   name of the study (column *StudyName*)\n*   year of the study (column *year*)\n*   name of the organisation that provided that data file (column *organisation*)\n*   attribute contained in some data files, starting with the letter V followed by a number (either 2 or 3) presumably indicating the version number (column *V*)\n*   pool of comments added to fields in individual records (*RecordNotes*)\n\nData was then exported to the respective preparatory files and uploaded to the EU Pollinator Hub according to [SOP-017 (Dataset integration](https:\/\/app.pollinatorhub.eu\/pages\/sop-directory).","validation":"No data validation was performed.","analysis":"No data analysis was performed.","status":"publish","public":true,"licence":{"links":[],"uid":"cc-by-nc-nd-4-0","name":"CC BY-NC-ND 4.0","abbreviation":"CC BY-NC-ND 4.0","description":"### You are free to:\n\n* Share \u2014 copy and redistribute the material in any medium or format.\n* The licensor cannot revoke these freedoms as long as you follow the license terms.\n\n### Under the following terms:\n\n* Attribution - You must give appropriate credit , provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.\n* NonCommercial - You may not use the material for commercial purposes.\n* NoDerivatives - If you remix, transform, or build upon the material, you may not distribute the modified material.\n* No additional restrictions - You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\n\n### Notices:\n\nYou do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.\n\nNo warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.\n","url_summary":"https:\/\/creativecommons.org\/licenses\/by-nc-nd\/4.0","url_legal":"https:\/\/creativecommons.org\/licenses\/by-nc-nd\/4.0\/legalcode","image_url":"\/storage\/01HF964YD1M0APF9DSP8THPZSR.svg"},"contacts":[],"entities":[{"links":[],"id":93,"uid":"b-good-bee-health-data-portal","name":"B-GOOD Bee Health Data Portal","type":"legal-entity","abbreviation":"B-GOOD","created_at":"2024-09-23T09:03:48.000000Z","updated_at":"2024-11-03T11:12:48.000000Z"}],"contributors":[],"parts":[{"links":{"data":{"href":"https:\/\/app.pollinatorhub.eu\/api\/v1\/discovery\/data\/BGDHL178.PLTST363.0"}},"id":363,"uid":"BGDHL178.PLTST363.0","name":"Pilot study","description":"Data from the tier 1 pilot A and B studies performed in 2020, 2021 and 2022.","featured_image":null,"structure":null,"preparation":"1.   In column *partner* {UGent} was changed to the more commonly used acronym {UGENT} in 22 records in order to avoid potential problems with automated data analysis.\n2.   Column *sample ID* was renamed *SampleID* to avoid blank spaces in table headers, which might cause problems in some database systems.\n3.   Column *DWV A* was renamed *DWVA* to avoid blank spaces in table headers, which might cause problems in some database systems.\n4.   Column *Cat.* relating to column *DWVA* was renamed *DWVA_Cat* to assure an assignment of unique names to column headers.\n5.   Column *DWVA_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n6.   Column *DWV B* was renamed *DWVB* to avoid blank spaces in table headers, which might cause problems in some database systems.\n7.   Column *Cat.* relating to column *DWVB* was renamed *DWVB_Cat* to assure an assignment of unique names to column headers.\n8.   Column *DWVB_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n9.   Column *Cat.* relating to column *ABPV* was renamed *ABPV_Cat* to assure an assignment of unique names to column headers.\n10.   Column *ABPV_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n11.   Column *Cat.* relating to column *CBPV* was renamed *CBPV_Cat* to assure an assignment of unique names to column headers.\n12.   Column *CBPV_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n13.   Column *Cat.* relating to column *BQCV* was renamed *BQCV_Cat* to assure an assignment of unique names to column headers.\n14.   Column *BQCV_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n15.   Column *Cat.* relating to column *SBV* was renamed *SBV_Cat* to assure an assignment of unique names to column headers.\n16.   Column *SBV_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n17.   Column *Cat.* relating to column *EFB* was renamed *EFB_Cat* to assure an assignment of unique names to column headers.\n18.   Column *EFB_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n19.   Column *Cat.* relating to column *AFB* was renamed *AFB_Cat* to assure an assignment of unique names to column headers.\n20.   Column *AFB_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n21.   Column *N. apis* was renamed *NosemaApis* to avoid blank spaces in table headers, which might cause problems in some database systems.\n22.   Column *NosemaApis_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n23.   Column *N. ceranae* was renamed *NosemaCeranae* to avoid blank spaces in table headers, which might cause problems in some database systems.\n24.   Column *NosemaCeranae_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n25.   Column *\\> 100 bees* was renamed *VarroaBees* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n26.   Column *Varroa\/100 bees* was renamed *VarroaInfestation* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n27.   Column *Varroa_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n28.   Column *AFB (cfu)*was renamed *AFBcfu* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n29.   Column *AFBcfu_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n30.   Column *N. spores* was renamed *NosemaSpores* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n31.   Column *NosemaSpores_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n32.   Column *CT \\< 36,00* was renamed *Malpighamoeba_CT* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n33.   Column *Malpighamoeba_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in therelated column can be added.","changes":"1.   All occurrences of the character {-} in column *DWVA_Cat* were replaced by {N} (612 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n2.   In records, which contained the string {negative} in column *DWVA*, column *DWVA_Notes* was replaced by {negative} (634 records) and {negative} in column *DWVA* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n3.   All occurrences of the character {-} in column *DWVB_Cat* were replaced by {N} (21 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n4.   In records, which contained the string {negative} in column *DWVB*, column *DWVB_Notes* was replaced by {negative} (21 records) and the {negative} in column *DWVB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n5.   All occurrences of the character {-} in column *ABPV_Cat* were replaced by {N} (169 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n6.   In records, which contained the string {negative} in column *ABPV*, column *ABPV_Notes* was replaced by {negative} (168 records) and the {negative} in column *ABPV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n7.   In records, which contain blank values in column *ABPV*, column *ABPV_Notes* was replaced by {not available} (265 records) and the blanks in column *ABPV* and column *ABPV_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n8.   All occurrences of the character {-} and one occurrence of a blank value in column *CBPV_Cat* were replaced by {N} (227 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n9.   In records, which contain blank values in column *CBPV*, column *CBPV_Notes* was replaced by {not available} (265 records) and the blanks in column *CBPV* and column *CBPV_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers or categories.\n10.   In records, which contained the string {negative} in column *CBPV*, column *CBPV_Notes* was replaced by {negative} (227 records) and the {negative} in column *CBPV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n11.   In records, which contain the value {\\>40} in column *CBPV* (1 record), column *CBPV_Notes* was replaced by {\\>40} and the {\\>40} in column *CBPV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n12.   All occurrences of the character {-} in column *SBV_Cat* were replaced by {N} (2 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n13.   In records, which contained the string {negative} in column *SBV*, column *SBV_Notes* was replaced by {negative} (2 records) and the {negative} in column *SBV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n14.   All occurrences of the character {-} in column *EFB_Cat* were replaced by {N} (239 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n15.   In records, which contain blank values in column *EFB*, column *EFB_Notes* was replaced by {not available} (485 records) and the blanks in column *EFB* and column *EFB_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n16.   In records, which contained the string {negative} in column *EFB*, column *EFB_Notes* was replaced by {negative} (261 records) and the {negative} in column *EFB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n17.   In records, which contained the string {negative} in column *AFB*, column *AFB_Notes* was replaced by {negative} (253 records) and the {negative} in column *AFB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n18.   All occurrences of the character {-} in column *AFB_Cat* were replaced by {N} (232 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n19.   In records, which contain blank values in column *AFB*, column *AFB_Notes* was replaced by {not available} (485 records) and the blanks in column *AFB* and column *EFB_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n20.   In records, which contain blank values in column *NosemaApis*, column *NosemaApis_Notes* was replaced by {not available} (262 records) and the blanks in column *NosemaApis* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n21.   In records, which contained the string {negative} in column *NosemaApis*, column *NosemaApis_Notes* was replaced by {negative} (506 records) and the {negative} in column *NosemaApis* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n22.   In records, which contain blank values in column *NosemaCeranae*, column *NosemaCeranae_Notes* was replaced by {not available} (262 records) and the blanks in column *NosemaCeranae*were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n23.   In records, which contained the string {negative} in column *NosemaCeranae*, column *NosemaCeranae_Notes* was replaced by {negative} (253 records) and the {negative} in column *NosemaCeranae* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n24.   In records, which contain {ND} in column *VarroaInfestation*, column *Varroa_Notes* was replaced by {ND} (7 records) and {ND} in column *VarroaInfestation* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n25.   In records, which contain {ND} in column *AFBcfu*, column *AFBcfu_Notes* was replaced by {ND} (270 records) and {ND} in column *AFBcfu* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n26.   In records, which contain blank values in column *AFBcfu*, column *AFBcfu_Notes* was replaced by {not available} (485 records) and the blanks in column *AFBcfu* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n27.   In 1 record, in which column *AFBcfu* contained the special character {-}, where dataset = {B-GOOD Pilot A results 2020 for BEEP V2 } and SampleID = {UTYBTKUM}, column *AFBcfu* was replaced by {NULL} and column *AFBcfu_Notes* was replaced by {unknown} to avoid having special characters in a data column that is supposed to contain real numbers.\n28.   In records, which contain {ND} in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {ND} (252 records) and {ND} in column *NosemaSpores* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n29.   In records, which contain blank values in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {not available} (262 records) and the blanks in column *NosemaSpores*were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n30.   In records, which contain {\\< 25000; \\<25000} in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {\\<25000} (26 records) and {\\< 25000; \\<25000} in column *NosemaSpores* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n31.   In records, which contained the string {negative} in column *Malpighamoeba*, column *Malpighamoeba_Notes* was replaced by {negative} (225 records) and the {negative} in column *Malpighamoeba* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n32.   In records, which contained no values in column *Malpighamoeba*, column *Malpighamoeba_Notes* was replaced by {not available} (513 records) and the blanks in column *Malpighamoeba* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.","unresolved":"1. Overall, the B-GOOD datasets ingested into this EUPH dataset lack sufficient metadata and there are a range of other issues that limit compliance with the FAIR principles.\n2. In general, columns are not sufficiently well described (*e.g.* it is unclear, which information is contained in columns *MalpighamoebaCT* and *Malpighamoeba_Notes* related to column *Malpighamoeba*; it is unclear, if the definitions provided for the attributes L, M, H - number of genome copies per bee -, which are used to define the dilution of DNA plasmids, only refer to Viral pathogens or to all pathogens). The provider should provide all information necessary to allow reuse of the data within the dataset.  \n3. For some columns no units are provided (*e.g.* AFB cfu), for other columns, the unit in which data is expressed is not explicitly stated and can only be assumed based on exclusion. The provider should explicitly state the units in columns containing data in order to avoid misunderstandings. \n4. Some of the attributes used in the dataset are not explained (*e.g.* ND). The provider should define the meaning of all attributes used in the dataset.\n5. Data comes in Microsoft Excel files, which occasionally contain nested comments or uncommented annotations (*e.g.* different background colour of cells) in single cells, which makes storage in relational databases difficult and automated processing and analysis impossible.\n6. The table structure does not facilitate data standardisation, as standardisation would require all values measured with the same method to be stored int one single column and transformed to the same unit.\n7. The significance of the string {ND} is unclear:\n* In columns *DWV_Cat*, *EFB_Cat*, *AFB_Cat* (22 records), where column *dataset* = {B-GOOD Pilot B results 2020 for WR V3} and *SampleID* = {BKCSYJMR; JKSXXKSC; LSPSHGZL; MDHLMFYT; NMYRPHNJ; YUXRGDZR; ANYXAYUZ; GNBMNLPM; HFXGDUAU; YPCTFUUU; LJSUAPFC; ZCUPCPFF; KNBULSMH; DUSFMRXB; JTYTGYDP; HXNGCDSH; KSNLKPRT; DRAZTCGC; LYZHDDGB; DXSPRLUC; CYPCTUGX; MJUYMLSH};\n* In column *VarroaBees* and *Varroa_Notes* (7 records), where column *dataset* = {B-GOOD Pilot A results 2020 for BEEP V2} and *SampleID* = {CKTSXSMR; CYXUCRUN; FBYMAGCT; HCHPHKFL; RRBYHJBU; STZPSJHR; UAKMCLMN};\n* In column *VarroaBees* and *Varroa_Notes* (7 records), where column *dataset* = {B-GOOD Pilot A results 2020 for BEEP V2} and *SampleID* = {CKTSXSMR; CYXUCRUN; FBYMAGCT; HCHPHKFL; RRBYHJBU; STZPSJHR; UAKMCLMN};\n* In column *NosemaSpores_Notes* (252 records);\n8.   The significance of the special character {-} in column *AFBcfu*, where dataset = {B-GOOD Pilot A results 2020 for BEEP V2 } and *SampleID* = {UTYBTKUM}, is unclear. Column *AFBcfu_Notes* was replaced by {unknown} until the issue will be resolved.","additional_information":null,"type":"file","licence":null,"columns":[{"links":[],"id":2942,"name":"dataset","description":"Name of the dataset on the [Bee Health Data Portal](https:\/\/beehealthdata.org\/) from which the data was obtained.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:06.000000Z"},{"links":[],"id":2943,"name":"StudyTierLevel","description":"Tier level of the study.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:06.000000Z"},{"links":[],"id":2944,"name":"StudyName","description":"Name of the study.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2945,"name":"year","description":"[Calendar year](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/3321) in which the data was acquired.","descriptor":{"links":[],"id":340,"uid":"0.0.YEARA340","namespace":"dwc","name":"year","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_year):\n> The four-digit year in which the [dwc:Event](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7474) occurred, according to the Common Era Calendar.","class":"[EUPH-code: 571]","unit":{"links":[],"name":"year","standardised_notation":"year","quantity_description":"time","unit_description":"year","base_unit":"year","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2023-11-22T11:40:35.000000Z","updated_at":"2025-01-24T10:12:17.000000Z"},"unit":{"links":[],"name":"year","standardised_notation":"year","quantity_description":"time","unit_description":"year","base_unit":"year","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2946,"name":"organisation","description":"Not specified by the data provider. Organisation appearing in the name of the dataset.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2947,"name":"V","description":"Not specified by the data provider. V number appearing in the name of the dataset.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2948,"name":"SampleID","description":"Unique identifier of the sample.","descriptor":{"links":[],"id":489,"uid":"0.0.MTRLS489","namespace":"dwc","name":"materialSampleID","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_materialSampleID):\n\n> An identifier for the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551) (as opposed to a particular digital record of the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551)). In the absence of a persistent global unique identifier, construct one from a combination of identifiers in the record that will most closely make the [dwc:materialSampleID](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7552) globally unique. ","class":"[EUPH-code: 7552]","unit":null,"created_at":"2024-10-23T11:47:35.000000Z","updated_at":"2025-01-21T11:04:47.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2949,"name":"partner","description":"Not specified by the data provider. Presumably the name of the consortium partner, who the provided the data.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2950,"name":"season","description":"Not specified by the data provider. Presumably the [season](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7346) in which the sample was collected.","descriptor":{"links":[],"id":466,"uid":"0.0.SSONA466","namespace":"pms","name":"season","description":"[...] any of the four arbitrary divisions of the year, characterized chiefly by differences in temperature, precipitation, amount of daylight, and plant growth [...]","class":"[EUPH-code: 7346]","unit":null,"created_at":"2024-10-08T09:57:37.000000Z","updated_at":"2025-02-06T15:56:22.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2951,"name":"DWVA","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Deformed Wing Virus A](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7418) (DWV A).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2952,"name":"DWVA_Cat","description":"Attribute referring to column *DWVA*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2953,"name":"DWVA_Notes","description":"Annotations referring to column *DWVA*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2954,"name":"DWVB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Deformed Wing Virus B](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7419) (DWV-B).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2955,"name":"DWVB_Cat","description":"Attribute referring to column *DWVB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2956,"name":"DWVB_Notes","description":"Annotations referring to column *DWVB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2957,"name":"ABPV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Acute Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/99) (ABPV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2958,"name":"ABPV_Cat","description":"Attribute referring to column *ABPV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2959,"name":"ABPV_Notes","description":"Annotations referring to column *ABPV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2960,"name":"CBPV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Chronic Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/100) (CBPV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2961,"name":"CBPV_Cat","description":"Attribute referring to column *CBPV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2962,"name":"CBPV_Notes","description":"Annotations referring to column *CBPV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2963,"name":"BQCV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Black Queen Cell Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/103) (BQCV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2964,"name":"BQCV_Cat","description":"Attribute referring to column *BQCV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2965,"name":"BQCV_Notes","description":"Annotations referring to column *BQCV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2966,"name":"SBV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Sackbrood Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/105) (SBV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2967,"name":"SBV_Cat","description":"Attribute referring to column *SBV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2968,"name":"SBV_Notes","description":"Annotations referring to column *SBV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2969,"name":"EFB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load witht the causative agent of [European Foulbrood of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/118) (EFB), *[Melissococcus plutonius](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/90)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2970,"name":"EFB_Cat","description":"Attribute referring to column *EFB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). It is not specified if the number of genome copies for th edifferent categories also refer to this column.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2971,"name":"EFB_Notes","description":"Annotations referring to column *EFB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2972,"name":"AFB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load witht the causative agent of [American Foulbrood](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/117) (AFB), *[Paenibacillus larvae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/89)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2973,"name":"AFB_Cat","description":"Attribute referring to column *AFB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). It is not specified if the number of genome copies for th edifferent categories also refer to this column.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2974,"name":"AFB_Notes","description":"Annotations referring to column *AFB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2975,"name":"NosemaApis","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with one of the causative agents of [Nosemosis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) of [honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/19), *[Nosema apis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/92)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:07.000000Z"},{"links":[],"id":2976,"name":"NosemaApis_Notes","description":"Annotations referring to column *NosemaApis*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2977,"name":"NosemaCeranae","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with one of the causative agents of [Nosemosis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) of [honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/19), *[Nosema ceranae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/93)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2978,"name":"NosemaCeranae_Notes","description":"Annotations referring to column *NosemaCeranae*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).\n\n","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2979,"name":"VarroaBees","description":"Attribute referring to column *VarroaInfestation*: Y (Yes) if 100 bees or more were sampled; N (No) if less than 100 bees were samples.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2980,"name":"VarroaInfestation","description":"[Varroa infestation](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/3340), measured as [Varroa infestation rate of adult bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7348).","descriptor":{"links":[],"id":468,"uid":"0.0.VRRNF468","namespace":"pms","name":"varroaInfestationOfAdultBees","description":"The quantity [infestation rate of adult honey bee colonies with Varroa mites (*Varroa destructor*)](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/914), measured by dislodging [Varroa mites](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/80) from adult [honey bees](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/19), expressed in number of Varroa mites per unit of honey bees.","class":"[EUPH-code: 7348]","unit":{"links":[],"name":"Varroa mites\/100 bees","standardised_notation":"mites (100 bees)<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of Varroa mites per unit of bees","base_unit":"Varroa mites\/100 bees","conversion_function":null,"conversion_factor":null},"created_at":"2024-10-08T12:39:16.000000Z","updated_at":"2025-03-25T15:13:03.000000Z"},"unit":{"links":[],"name":"Varroa mites\/100 bees","standardised_notation":"mites (100 bees)<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of Varroa mites per unit of bees","base_unit":"Varroa mites\/100 bees","conversion_function":null,"conversion_factor":null},"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2981,"name":"Varroa_Notes","description":"Annotations referring to column *VarroaInfestation*.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2982,"name":"AFBcfu","description":"Not specified by the data provider. Presumably colony forming units, counted appearing in microbiological assays, which are used for the detection of the causative agent of [American Foulbrood](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/117) (AFB), *[Paenibacillus larvae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/89)*.","descriptor":{"links":[],"id":313,"uid":"0.0.NTGER313","namespace":null,"name":"Integer","description":"> A number with no fractional part, including the negative and positive numbers as well as zero.","class":"[EUPH-code: 7324]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:14:52.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2983,"name":"AFBcfu_Notes","description":"Annotations referring to column *AFBcfu*. ND (meaning not specified by the data provider); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2984,"name":"NosemaSpores","description":"Number of the causative agents of [Nosemosis of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) (*[Nosema apis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/92)*, *[Nosema ceranae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/93)*), exprtessed in spores per animal.","descriptor":{"links":[],"id":313,"uid":"0.0.NTGER313","namespace":null,"name":"Integer","description":"> A number with no fractional part, including the negative and positive numbers as well as zero.","class":"[EUPH-code: 7324]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:14:52.000000Z"},"unit":{"links":[],"name":"spores per animal","standardised_notation":"spores animal<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of spores per animal","base_unit":"spores per animal","conversion_function":null,"conversion_factor":null},"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2985,"name":"NosemaSpores_Notes","description":"Annotations referring to column *NosemaSpores*. ND (meaning not specified by the data provider); not available (data has not been provided in the raw data file); <25000 (less than 25000 spores per animal).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2986,"name":"Malpighamoeba","description":"The [Cq-value]([Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347)) (Ct value) for the infection load witht the causative agent of [amoeba disease of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/124), *[Malpighamoeba mellificae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/96)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2987,"name":"Malpighamoeba_CT","description":"Not specified by the data provider.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2988,"name":"Malpighamoeba_Notes","description":"Annotations referring to column *Malpighamoeba*.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"},{"links":[],"id":2989,"name":"RecordNotes","description":"Notes added by the data provider to specific records in the raw data.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-07T14:23:25.000000Z","updated_at":"2024-11-12T11:40:08.000000Z"}],"data_files":{"6":{"links":[],"id":499,"name":"b-good disease monitoring_pilot_PREP_MR_241007.csv","description":null,"status":"completed","type":"csv","mimetype":"text\/csv","file_size":239025,"download_count":0,"created_at":"2024-10-10T14:31:29.000000Z","updated_at":"2025-08-21T13:30:20.000000Z"}},"supplemental_files":[{"links":[],"id":476,"name":"b-good-pilot-a-results-2020-for-beep-v2.xlsx","description":"Dataset [Tier1 Pilot A results 2021 for BEEP](https:\/\/beehealthdata.org\/datasets\/17778257-4340-4e96-8106-beaa365602dc)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":42150,"download_count":0,"created_at":"2024-10-07T14:26:29.000000Z","updated_at":"2024-10-07T14:28:24.000000Z"},{"links":[],"id":477,"name":"b-good-pilot-b-results-2020-for-wr-v3.xlsx","description":"Dataset [B-GOOD Pilot B results 2020 for WR V3](https:\/\/beehealthdata.org\/datasets\/5f2a5902-82ba-4e2d-9e81-fdb6a3785ec1)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":21257,"download_count":0,"created_at":"2024-10-07T14:27:49.000000Z","updated_at":"2024-10-07T14:27:49.000000Z"},{"links":[],"id":478,"name":"b-good-tier-1-results-2021-for-beep-v3.xlsx","description":"Dataset [Tier1 Pilot A results 2021 for BEEP](https:\/\/beehealthdata.org\/datasets\/17778257-4340-4e96-8106-beaa365602dc)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":43377,"download_count":0,"created_at":"2024-10-07T14:29:25.000000Z","updated_at":"2024-10-07T14:29:25.000000Z"},{"links":[],"id":479,"name":"b-good-pilot-b-results-2021-for-wr-v2.xlsx","description":"Dataset [Tier1 Pilot B results 2021 for WR](https:\/\/beehealthdata.org\/datasets\/76f5fe0e-e137-4263-bdc8-1cb2d4c6aa66) ","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":23647,"download_count":0,"created_at":"2024-10-07T14:30:57.000000Z","updated_at":"2024-10-07T14:30:57.000000Z"},{"links":[],"id":480,"name":"b-good-tier-1-results-2022-for-beep.xlsx","description":"Dataset [Tier1 Pilot A results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/0dbc5c1e-fd34-4399-b4e3-a5741b52422c)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":49700,"download_count":0,"created_at":"2024-10-07T14:32:23.000000Z","updated_at":"2024-10-07T14:32:23.000000Z"},{"links":[],"id":481,"name":"b-good-pilot-b-results-2022-for-wr.xlsx","description":"Dataset [Tier1 Pilot B results 2022 for WR](https:\/\/beehealthdata.org\/datasets\/e1aea4e6-2f1b-4585-b31f-36598db40b93) ","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":24818,"download_count":0,"created_at":"2024-10-07T14:33:10.000000Z","updated_at":"2024-10-07T14:33:10.000000Z"}],"created_at":"2024-10-07T14:22:17.000000Z","updated_at":"2025-04-18T09:44:16.000000Z"},{"links":{"data":{"href":"https:\/\/app.pollinatorhub.eu\/api\/v1\/discovery\/data\/BGDHL178.FLDST364.0"}},"id":364,"uid":"BGDHL178.FLDST364.0","name":"Field study","description":"Data from the tier 2 and tier 3 field studies A and B performed in 2021 and 2022.","featured_image":null,"structure":null,"preparation":"1.   Column *sample ID* was renamed *SampleID* to avoid blank spaces in table headers, which might cause problems in some database systems.\n2.   Column *DWV A* was renamed *DWVA* to avoid blank spaces in table headers, which might cause problems in some database systems.\n3.   Column *Cat.* relating to column *DWVA* was renamed *DWVA_Cat* to assure an assignment of unique names to column headers.\n4.   Column *DWVA_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n5.   Column *DWV B* was renamed *DWVB* to avoid blank spaces in table headers, which might cause problems in some database systems.\n6.   Column *Cat.* relating to column *DWVB* was renamed *DWVB_Cat* to assure an assignment of unique names to column headers.\n7.   Column *DWVB_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n8.   Column *Cat.* relating to column *ABPV* was renamed *ABPV_Cat* to assure an assignment of unique names to column headers.\n9.   Column *ABPV_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n10.   Column *Cat.* relating to column *CBPV* was renamed *CBPV_Cat* to assure an assignment of unique names to column headers.\n11.   Column *CBPV_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n12.   Column *Cat.* relating to column *BQCV* was renamed *BQCV_Cat* to assure an assignment of unique names to column headers.\n13.   Column *BQCV_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n14.   Column *Cat.* relating to column *SBV* was renamed *SBV_Cat* to assure an assignment of unique names to column headers.\n15.   Column *SBV_Notes* was created and replaced with {NULL} (769 records) to add a column in which notes on the data in the related column can be added.\n16.   Column *Cat.* relating to column *EFB* was renamed *EFB_Cat* to assure an assignment of unique names to column headers.\n17.   Column *EFB_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n18.   Column *Cat.* relating to column *AFB* was renamed *AFB_Cat* to assure an assignment of unique names to column headers.\n19.   Column *AFB_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n20.   Column *N. apis* was renamed *NosemaApis* to avoid blank spaces in table headers, which might cause problems in some database systems.\n21.   Column *NosemaApis_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n22.   Column *N. ceranae* was renamed *NosemaCeranae* to avoid blank spaces in table headers, which might cause problems in some database systems.\n23.   Column *NosemaCeranae_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n24.   Column *\\> 100 bees* was renamed *VarroaBees* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n25.   Column *Varroa\/100 bees* was renamed *VarroaInfestation* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n26.   Column *Varroa_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n27.   Column *AFB (cfu)*was renamed *AFBcfu* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n28.   Column *AFBcfu_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n29.   Column *N. spores* was renamed *NosemaSpores* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n30.   Column *NosemaSpores_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.\n31.   Column *CT \\< 36,00* was renamed *Malpighamoeba_CT* to avoid blank spaces and special characters in table headers, which might cause problems in some database systems.\n32.   Column *Malpighamoeba_Notes* was created and replaced with {NULL} (1029 records) to add a column in which notes on the data in the related column can be added.","changes":"1.   In 27 records obtained from the file of dataset [Tier2 Field study A results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/1b40261f-0fa0-4a7f-8061-be27cb2be3f6) (b-good-tier-2-results-2022-for-beep-v2.xlsx) and 36 records obtained from the file of dataset [Tier3 Field study B results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/8ea4d968-b1ae-4253-9856-f913b374217b) (b-good-tier-3-results-2022-for-beep.xlsx) the leading asterisk {\\*} was removed from the data in column *SampleID* and the comment referring to those *SampleID* (\"these codes might be wrong, as they could not be uploaded onto the BEEP app, or there was no code at all\"), supplemented by the explanatory text in square brackets (\"\\[column SampleID\\]\" ) was added to column *RecordNotes* of the same record. Removal of annotations to a datum is necessary to enable the records to be linked with records in other tables in relational databases.\n2.   In records, which contained the string {negative} in column *DWVA*, column *DWVA_Notes* was replaced by {negative} (728 records) and {negative} in column *DWVA* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n3.   All occurrences of the character {-} in column *DWVA_Cat* were replaced by {N} (727 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n4.   In records, which contained the string {negative} in column *DWVB*, column *DWVB_Notes* was replaced by {negative} (26 records) and the {negative} in column *DWVB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n5.   All occurrences of the character {-} in column *DWVB_Cat* were replaced by {N} (26 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n6.   All occurrences of the character {-} in column *ABPV_Cat* were replaced by {NULL} (409 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n7.   In records, which contained the string {negative} in column *ABPV*, column *ABPV_Notes* was replaced by {negative} (410 records) and the {negative} in column *ABPV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n8.   In records, which contain blank values in column *ABPV*, column *ABPV_Notes* was replaced by {not available} (335 records) and the blanks in column *ABPV* and column *ABPV_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers or categories.\n9.   All occurrences of the character {-} and one occurrence of a blank value in column *CBPV_Cat* were replaced by {N} (400 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n10.   In records, which contained the string {negative} in column *CBPV*, column *CBPV_Notes* was replaced by {negative} (402 records) and the {negative} in column *CBPV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n11.   In records, which contain blank values in column *CBPV*, column *CBPV_Notes* was replaced by {not available} (335 records) and the blanks in column *CBPV* and column *CBPV_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers or categories.\n12.   All occurrences of the character {-} and one occurrence of a blank value in column *BQCV_Cat* were replaced by {N} (2 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n13.   In records, which contained the string {negative} in column *BQCV*, column *BQCV_Notes* was replaced by {negative} (2records) and the {negative} in column *BQCV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n14.   In records, which contained the string {negative} in column *SBV*, column *SBV_Notes* was replaced by {negative} (77 records) and the {negative} in column *SBV* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n15.   All occurrences of the character {-} in column *SBV_Cat* were replaced by {N} (77 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n16.   All occurrences of the character {-} in column *EFB_Cat* were replaced by {N} (357 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n17.   In records, which contained the string {negative} in column *EFB*, column *EFB_Notes* was replaced by {negative} (357 records) and the {negative} in column *EFB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n18.   In records, which contain blank values in column *EFB*, column *EFB_Notes* was replaced by {not available} (651 records) and the blanks in column *EFB* and column *EFB_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n19.   In records, which contain {ND} in column *EFB*, column *EFB_Notes* was replaced by {ND} (3 records) and {ND} blanks in column *EFB* as well as blank values in column *EFB_Cat* were replaced by {NULL} to avoid having string or blank values in a data column that is supposed to contain real numbers or categories.\n20.   All occurrences of the character {-} in column *AFB_Cat* were replaced by {NULL} (300 records), as the use of a mathematical operator as a datum could potentially cause problems with database queries under particular circumstances.\n21.   In records, which contained the string {negative} in column *AFB*, column *AFB_Notes* was replaced by {negative} (300 records) and the {negative} in column *AFB* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n22.   In records, which contain blank values in column *AFB*, column *AFB_Notes* was replaced by {not available} (696 records) and the blanks in column *AFB* and column *EFB_Cat* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n23.   In records, which contained the string {negative} in column *NosemaApis*, column *NosemaApis_Notes* was replaced by {negative} (687 records) and the {negative} in column *NosemaApis* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n24.   In records, which contain blank values in column *NosemaApis*, column *NosemaApis_Notes* was replaced by {not available} (333 records) and the blanks in column *NosemaApis* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n25.   In records, which contained the string {negative} in column *NosemaCeranae*, column *NosemaCeranae_Notes* was replaced by {negative} (435 records) and the {negative} in column *NosemaCeranae* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.\n26.   In records, which contain blank values in column *NosemaCeranae*, column *NosemaCeranae_Notes* was replaced by {not available} (333 records) and the blanks in column *NosemaCeranae*were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n27.   In records, which contain {ND} in columns *VarroaBees* and *VarroaInfestation*, column *Varroa_Notes* was replaced by {ND} (2 records) and {ND} in columns *VarroaBees* and *VarroaInfestation* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers or categories.\n28.   In records, which contain {ND} in column *AFBcfu* (312 records), column *AFBcfu_Notes* was replaced by {ND} and {ND} in column *AFBcfu* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n29.   In records, which contain blank values in column *AFBcfu*, column *AFBcfu_Notes* was replaced by {not available} (696 records) and the blanks in column *AFBcfu* were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n30.   In records, which contain {ND} in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {ND} (426 records) and {ND} in column *NosemaSpores* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n31.   In records, which contain blank values in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {not available} (333 records) and the blanks in column *NosemaSpores*were replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n32.   In records, which contain {\\< 25000; \\<25000} in column *NosemaSpores*, column *NosemaSpores_Notes* was replaced by {\\<25000} (44 records) and {\\< 25000; \\<25000} in column *NosemaSpores* was replaced by {NULL} to avoid having blank values in a data column that is supposed to contain real numbers.\n33.   In records, which contained the string {negative} in column *Malpighamoeba*, column *Malpighamoeba_Notes* was replaced by {negative} (636 records) and the {negative} in column *Malpighamoeba* was replaced by {NULL} to avoid having text in a data column that is supposed to contain real numbers.","unresolved":"1. Overall, the B-GOOD datasets ingested into this EUPH dataset lack sufficient metadata and there are a range of other issues that limit compliance with the FAIR principles.\n2. In general, columns are not sufficiently well described (*e.g.* it is unclear, which information is contained in columns *MalpighamoebaCT* and *Malpighamoeba_Notes* related to column *Malpighamoeba*; it is unclear, if the definitions provided for the attributes L, M, H - number of genome copies per bee -, which are used to define the dilution of DNA plasmids, only refer to Viral pathogens or to all pathogens). The provider should provide all information necessary to allow reuse of the data within the dataset.  \n3. For some columns no units are provided (*e.g.* AFB cfu), for other columns, the unit in which data is expressed is not explicitly stated and can only be assumed based on exclusion. The provider should explicitly state the units in columns containing data in order to avoid misunderstandings. \n4. Some of the attributes used in the dataset are not explained (*e.g.* ND). The provider should define the meaning of all attributes used in the dataset.\n5. Data comes in Microsoft Excel files, which occasionally contain nested comments or uncommented annotations (*e.g.* different background colour of cells) in single cells, which makes storage in relational databases difficult and automated processing and analysis impossible.\n6. The table structure does not facilitate data standardisation, as standardisation would require all values measured with the same method to be stored int one single column and transformed to the same unit.\n7. In column *SampleID* the values {GB_1; GB2; GB_3} are not unique. Each of them exists twice.\n8. The significance of the string {ND} is unclear:\n* In column *EFB_Cat* (3 records), where column *dataset* = {Tier2 Field study A results 2022 for BEEP} and *SampleID* = {CDYTBDHK; DTUDJNAG; RYAYUTUG};\n* In column *Varroa_Notes*, where column dataset = {*Varroa_Tier2 Field study results 2021 for WR*} and *SampleID* = {ZUXHUFZP, BXCTGZBN CFO};\n* In columns *AFBcfu_Notes* and *NosemaSpores_Notes*;","additional_information":null,"type":"file","licence":null,"columns":[{"links":[],"id":2990,"name":"dataset","description":"Name of the dataset on the [Bee Health Data Portal](https:\/\/beehealthdata.org\/) from which the data was obtained.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2991,"name":"StudyTierLevel","description":"Tier level of the study.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2992,"name":"StudyName","description":"Name of the study.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2993,"name":"year","description":"[Calendar year](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/3321) in which the data was acquired.","descriptor":{"links":[],"id":340,"uid":"0.0.YEARA340","namespace":"dwc","name":"year","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_year):\n> The four-digit year in which the [dwc:Event](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7474) occurred, according to the Common Era Calendar.","class":"[EUPH-code: 571]","unit":{"links":[],"name":"year","standardised_notation":"year","quantity_description":"time","unit_description":"year","base_unit":"year","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2023-11-22T11:40:35.000000Z","updated_at":"2025-01-24T10:12:17.000000Z"},"unit":{"links":[],"name":"year","standardised_notation":"year","quantity_description":"time","unit_description":"year","base_unit":"year","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2994,"name":"organisation","description":"Not specified by the data provider. Organisation appearing in the name of the dataset.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2995,"name":"V","description":"Not specified by the data provider. V number appearing in the name of the dataset.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2996,"name":"SampleID","description":"Unique identifier of the [sample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7373).","descriptor":{"links":[],"id":489,"uid":"0.0.MTRLS489","namespace":"dwc","name":"materialSampleID","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_materialSampleID):\n\n> An identifier for the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551) (as opposed to a particular digital record of the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551)). In the absence of a persistent global unique identifier, construct one from a combination of identifiers in the record that will most closely make the [dwc:materialSampleID](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7552) globally unique. ","class":"[EUPH-code: 7552]","unit":null,"created_at":"2024-10-23T11:47:35.000000Z","updated_at":"2025-01-21T11:04:47.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:48.000000Z"},{"links":[],"id":2997,"name":"partner","description":"Not specified by the data provider. Presumably the name of the consortium partner, who the provided the data.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":2998,"name":"season","description":"Not specified by the data provider. Presumably the [season](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7346) in which the sample was collected.","descriptor":{"links":[],"id":466,"uid":"0.0.SSONA466","namespace":"pms","name":"season","description":"[...] any of the four arbitrary divisions of the year, characterized chiefly by differences in temperature, precipitation, amount of daylight, and plant growth [...]","class":"[EUPH-code: 7346]","unit":null,"created_at":"2024-10-08T09:57:37.000000Z","updated_at":"2025-02-06T15:56:22.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":2999,"name":"DWVA","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Deformed Wing Virus A](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7418) (DWV-A).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3000,"name":"DWVA_Cat","description":"Attribute referring to column *DWVA*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3001,"name":"DWVA_Notes","description":"Annotations referring to column *DWVA*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3002,"name":"DWVB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Deformed Wing Virus B](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7419) (DWV-B).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3003,"name":"DWVB_Cat","description":"Attribute referring to column *DWVB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3004,"name":"DWVB_Notes","description":"Annotations referring to column *DWVB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3005,"name":"ABPV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Acute Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/99) (ABPV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3006,"name":"ABPV_Cat","description":"Attribute referring to column *ABPV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3007,"name":"ABPV_Notes","description":"Annotations referring to column *ABPV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3008,"name":"CBPV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Chronic Bee Paralysis Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/100) (CBPV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3009,"name":"CBPV_Cat","description":"Attribute referring to column *CBPV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3010,"name":"CBPV_Notes","description":"Annotations referring to column *CBPV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3011,"name":"BQCV","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with the [Black Queen Cell Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/103) (BQCV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3012,"name":"BQCV_Cat","description":"Attribute referring to column *BQCV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3013,"name":"BQCV_Notes","description":"Annotations referring to column *BQCV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3014,"name":"SBV","description":"The [Cq-value]([Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347)) (Ct value) for the infection load with the [Sackbrood Virus](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/105) (SBV).","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3015,"name":"SBV_Cat","description":"Attribute referring to column *SBV*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). For Virus: L means < 10^4 genome copies, M means between 10^4 and 10^7 genome copies, and H means > 10^7 genome copies per bee.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3016,"name":"SBV_Notes","description":"Annotations referring to column *SBV*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3017,"name":"EFB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load witht the causative agent of [European Foulbrood of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/118) (EFB), *[Melissococcus plutonius](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/90)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3018,"name":"EFB_Cat","description":"Attribute referring to column *EFB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). It is not specified if the number of genome copies for th edifferent categories also refer to this column.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3019,"name":"EFB_Notes","description":"Annotations referring to column *EFB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3020,"name":"AFB","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load witht the causative agent of [American Foulbrood](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/117) (AFB), *[Paenibacillus larvae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/89)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3021,"name":"AFB_Cat","description":"Attribute referring to column *AFB*, which is given if different dilutions of a DNA plasmid, containing the target sequence, were added, to provide an estimate of the amount of DNA or RNA present, or if no dilutions were added: L (Low); M (Medium); H (High); N (None). It is not specified if the number of genome copies for th edifferent categories also refer to this column.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3022,"name":"AFB_Notes","description":"Annotations referring to column *AFB*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3023,"name":"NosemaApis","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with one of the causative agents of [Nosemosis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) of [honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/19), *[Nosema apis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/92)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3024,"name":"NosemaApis_Notes","description":"Annotations referring to column *NosemaApis*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3025,"name":"NosemaCeranae","description":"The [Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347) (Ct value) for the infection load with one of the causative agents of [Nosemosis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) of [honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/19), *[Nosema ceranae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/93)*.","descriptor":{"links":[],"id":467,"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3026,"name":"NosemaCeranae_Notes","description":"Annotations referring to column *NosemaCeranae*. Negative (signal threshold not exceeded); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3027,"name":"VarroaBees","description":"Attribute referring to column *VarroaInfestation*: Y (Yes) if 100 bees or more were sampled; N (No) if less than 100 bees were samples.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3028,"name":"VarroaInfestation","description":"[Varroa infestation](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/3340), measured as [Varroa infestation rate of adult bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7348).","descriptor":{"links":[],"id":468,"uid":"0.0.VRRNF468","namespace":"pms","name":"varroaInfestationOfAdultBees","description":"The quantity [infestation rate of adult honey bee colonies with Varroa mites (*Varroa destructor*)](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/914), measured by dislodging [Varroa mites](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/80) from adult [honey bees](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/19), expressed in number of Varroa mites per unit of honey bees.","class":"[EUPH-code: 7348]","unit":{"links":[],"name":"Varroa mites\/100 bees","standardised_notation":"mites (100 bees)<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of Varroa mites per unit of bees","base_unit":"Varroa mites\/100 bees","conversion_function":null,"conversion_factor":null},"created_at":"2024-10-08T12:39:16.000000Z","updated_at":"2025-03-25T15:13:03.000000Z"},"unit":{"links":[],"name":"Varroa mites\/100 bees","standardised_notation":"mites (100 bees)<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of Varroa mites per unit of bees","base_unit":"Varroa mites\/100 bees","conversion_function":null,"conversion_factor":null},"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3029,"name":"Varroa_Notes","description":"Annotations referring to column *VarroaInfestation*.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3030,"name":"AFBcfu","description":"Not specified by the data provider. Presumably colony forming units, counted appearing in microbiological assays, which are used for the detection of the causative agent of [American Foulbrood](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/117) (AFB), *[Paenibacillus larvae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/89)*.","descriptor":{"links":[],"id":313,"uid":"0.0.NTGER313","namespace":null,"name":"Integer","description":"> A number with no fractional part, including the negative and positive numbers as well as zero.","class":"[EUPH-code: 7324]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:14:52.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3031,"name":"AFBcfu_Notes","description":"Annotations referring to column *AFBcfu*. ND (meaning not specified by the data provider); not available (data has not been provided in the raw data file).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3032,"name":"NosemaSpores","description":"Number of the causative agents of [Nosemosis of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/123) (*[Nosema apis](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/92)*, *[Nosema ceranae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/93)*), exprtessed in spores per animal.","descriptor":{"links":[],"id":313,"uid":"0.0.NTGER313","namespace":null,"name":"Integer","description":"> A number with no fractional part, including the negative and positive numbers as well as zero.","class":"[EUPH-code: 7324]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:14:52.000000Z"},"unit":{"links":[],"name":"spores per animal","standardised_notation":"spores animal<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of spores per animal","base_unit":"spores per animal","conversion_function":null,"conversion_factor":null},"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3033,"name":"NosemaSpores_Notes","description":"Annotations referring to column *NosemaSpores*. ND (meaning not specified by the data provider); not available (data has not been provided in the raw data file); <25000 (less than 25000 spores per animal).","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3034,"name":"Malpighamoeba","description":"The [Cq-value]([Cq-value](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/7347)) (Ct value) for the infection load witht the causative agent of [amoeba disease of honey bees](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/124), *[Malpighamoeba mellificae](https:\/\/app.pollinatorhub.eu\/dictionary\/classes\/96)*.","descriptor":{"links":[],"id":314,"uid":"0.0.DCMLN314","namespace":null,"name":"DecimalNumber","description":"> Any of the rational or irrational numbers.","class":"[EUPH-code: 7325]","unit":null,"created_at":null,"updated_at":"2025-01-12T10:31:26.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3035,"name":"Malpighamoeba_CT","description":"Not specified by the data provider.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3036,"name":"Malpighamoeba_Notes","description":"Annotations referring to column *Malpighamoeba*.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"},{"links":[],"id":3037,"name":"RecordNotes","description":"Notes added by the data provider to specific records in the raw data.","descriptor":{"links":[],"id":315,"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","class":"[EUPH-code: 7322]","unit":null,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},"unit":null,"datatype":null,"order":0,"created_at":"2024-10-08T07:06:11.000000Z","updated_at":"2024-12-19T08:09:49.000000Z"}],"data_files":[{"links":[],"id":482,"name":"b-good disease monitoring_field_PREP_MR_241007.csv","description":null,"status":"completed","type":"csv","mimetype":"text\/csv","file_size":341433,"download_count":0,"created_at":"2024-10-08T07:06:10.000000Z","updated_at":"2025-08-21T13:30:34.000000Z"}],"supplemental_files":{"1":{"links":[],"id":483,"name":"b-good-tier-2-results-2021-for-beep-v3.xlsx","description":"Dataset [Tier2 Field study results 2021 for BEEP ](https:\/\/beehealthdata.org\/datasets\/8133604e-4622-4806-995b-023cd23e53db)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":60756,"download_count":0,"created_at":"2024-10-08T07:09:17.000000Z","updated_at":"2024-10-08T07:09:17.000000Z"},"2":{"links":[],"id":484,"name":"b-good-tier-2-results-2021-for-bsour-v2.xlsx","description":"Dataset [Tier2 Field study results 2021 for BSOUR ](https:\/\/beehealthdata.org\/datasets\/2dc7fe43-4cab-4676-a3c7-3e078d8065f1)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":23473,"download_count":0,"created_at":"2024-10-08T07:10:33.000000Z","updated_at":"2024-10-08T07:10:33.000000Z"},"3":{"links":[],"id":485,"name":"b-good-tier-2-results-2021-for-mlu-v2.xlsx","description":"Dataset [Tier2 Field study results 2021 for MLU ](https:\/\/beehealthdata.org\/datasets\/9348f203-bfba-4a54-bbc6-84973c307399)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":21262,"download_count":0,"created_at":"2024-10-08T07:11:42.000000Z","updated_at":"2024-10-08T07:11:42.000000Z"},"4":{"links":[],"id":486,"name":"b-good-tier-2-results-2021-for-sml-v2.xlsx","description":"Dataset [Tier2 Field study results 2021 for SML](https:\/\/beehealthdata.org\/datasets\/d1475865-2ed1-421d-8963-e9e0b0b1b405)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":20126,"download_count":0,"created_at":"2024-10-08T08:09:12.000000Z","updated_at":"2024-10-08T08:09:12.000000Z"},"5":{"links":[],"id":487,"name":"b-good-tier-2-results-2021-for-ubern-v3.xlsx","description":"Dataset [Tier2 Field study results 2021 for UBERN ](https:\/\/beehealthdata.org\/datasets\/eb296ac9-80a2-404c-9d93-bc805af8d370)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":27748,"download_count":0,"created_at":"2024-10-08T08:10:20.000000Z","updated_at":"2024-10-08T08:10:20.000000Z"},"6":{"links":[],"id":488,"name":"b-good-tier-2-results-2021-for-wr-v2.xlsx","description":"Dataset [Tier2 Field study results 2021 for WR ](https:\/\/beehealthdata.org\/datasets\/f4a703c0-f792-4bab-97f5-e354c45c10c6)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":20030,"download_count":0,"created_at":"2024-10-08T08:11:14.000000Z","updated_at":"2024-10-08T08:11:14.000000Z"},"7":{"links":[],"id":489,"name":"b-good-tier-2-results-2022-for-beep-v2.xlsx","description":"[Tier2 Field study A results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/1b40261f-0fa0-4a7f-8061-be27cb2be3f6)","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":82020,"download_count":0,"created_at":"2024-10-08T08:12:11.000000Z","updated_at":"2024-10-08T08:12:11.000000Z"},"8":{"links":[],"id":490,"name":"b-good-tier-3-results-2022-for-beep.xlsx","description":"[Tier3 Field study B results 2022 for BEEP](https:\/\/beehealthdata.org\/datasets\/8ea4d968-b1ae-4253-9856-f913b374217b) ","status":"completed","type":"misc","mimetype":"application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet","file_size":105304,"download_count":0,"created_at":"2024-10-08T08:13:49.000000Z","updated_at":"2024-10-08T08:13:49.000000Z"}},"created_at":"2024-10-08T07:05:00.000000Z","updated_at":"2025-04-18T09:44:16.000000Z"}],"descriptors":[{"links":[],"uid":"0.0.NTGER313","namespace":null,"name":"Integer","description":"> A number with no fractional part, including the negative and positive numbers as well as zero.","notes":null,"examples":null,"class":"[EUPH-code: 7324]","unit":null,"deprecated":false,"created_at":null,"updated_at":"2024-09-14T11:14:52.000000Z"},{"links":[],"uid":"0.0.DCMLN314","namespace":null,"name":"DecimalNumber","description":"> Any of the rational or irrational numbers.","notes":null,"examples":null,"class":"[EUPH-code: 7325]","unit":null,"deprecated":false,"created_at":null,"updated_at":"2025-01-12T10:31:26.000000Z"},{"links":[],"uid":"0.0.TEXTA315","namespace":null,"name":"Text","description":"> In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally considered as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. String may also denote more general arrays or other sequence (or list) data types and structures.","notes":null,"examples":null,"class":"[EUPH-code: 7322]","unit":null,"deprecated":false,"created_at":null,"updated_at":"2024-09-14T11:17:02.000000Z"},{"links":[],"uid":"0.0.YEARA340","namespace":"dwc","name":"year","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_year):\n> The four-digit year in which the [dwc:Event](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7474) occurred, according to the Common Era Calendar.","notes":null,"examples":"* 1160\n* 2008\n","class":"[EUPH-code: 571]","unit":{"links":[],"name":"year","standardised_notation":"year","quantity_description":"time","unit_description":"year","base_unit":"year","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"deprecated":false,"created_at":"2023-11-22T11:40:35.000000Z","updated_at":"2025-01-24T10:12:17.000000Z"},{"links":[],"uid":"0.0.SSONA466","namespace":"pms","name":"season","description":"[...] any of the four arbitrary divisions of the year, characterized chiefly by differences in temperature, precipitation, amount of daylight, and plant growth [...]","notes":null,"examples":null,"class":"[EUPH-code: 7346]","unit":null,"deprecated":false,"created_at":"2024-10-08T09:57:37.000000Z","updated_at":"2025-02-06T15:56:22.000000Z"},{"links":[],"uid":"0.0.QNTFC467","namespace":"pms","name":"quantificationCycle","description":"Depending on the real-time instrument, either threshold cycle (Ct), crossing point (Cp) or a take-off point (Top) are used to refer to the same quantification cycle value (Cq): the fractional PCR cycle at which the target is quantified in a given sample. It was proposed to use the term **quantification cycle** (**Cq**) in accordance with the data standard RDML (Real-Time PCR Data Markup Language)","notes":null,"examples":null,"class":"[EUPH-code: 7347]","unit":{"links":[],"name":"no.","standardised_notation":"no.","quantity_description":"amount","unit_description":"number","base_unit":"no.","conversion_function":"1 E+00","conversion_factor":"1 E+00"},"deprecated":false,"created_at":"2024-10-08T11:34:19.000000Z","updated_at":"2025-02-08T15:53:21.000000Z"},{"links":[],"uid":"0.0.VRRNF468","namespace":"pms","name":"varroaInfestationOfAdultBees","description":"The quantity [infestation rate of adult honey bee colonies with Varroa mites (*Varroa destructor*)](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/914), measured by dislodging [Varroa mites](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/80) from adult [honey bees](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/19), expressed in number of Varroa mites per unit of honey bees.","notes":null,"examples":null,"class":"[EUPH-code: 7348]","unit":{"links":[],"name":"Varroa mites\/100 bees","standardised_notation":"mites (100 bees)<sup>-1<\/sup>","quantity_description":"infestation","unit_description":"number of Varroa mites per unit of bees","base_unit":"Varroa mites\/100 bees","conversion_function":null,"conversion_factor":null},"deprecated":false,"created_at":"2024-10-08T12:39:16.000000Z","updated_at":"2025-03-25T15:13:03.000000Z"},{"links":[],"uid":"0.0.MTRLS489","namespace":"dwc","name":"materialSampleID","description":"A term from the [Darwin Core standard](https:\/\/dwc.tdwg.org\/list\/#dwc_materialSampleID):\n\n> An identifier for the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551) (as opposed to a particular digital record of the [dwc:MaterialSample](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7551)). In the absence of a persistent global unique identifier, construct one from a combination of identifiers in the record that will most closely make the [dwc:materialSampleID](https:\/\/app.pollinatorhub.eu\/vocabulary\/classes\/7552) globally unique. ","notes":"Recommended best practice is to use a persistent, globally unique identifier. ","examples":"* 06809dc5-f143-459a-be1a-6f03e63fc083","class":"[EUPH-code: 7552]","unit":null,"deprecated":false,"created_at":"2024-10-23T11:47:35.000000Z","updated_at":"2025-01-21T11:04:47.000000Z"}],"published_at":"2025-03-16T23:00:00.000000Z","created_at":"2024-10-07T14:20:09.000000Z","updated_at":"2025-08-21T13:30:34.000000Z"}}